@model OCMDomain.Repository.Edmx.OnlineCourseValidation
@{
    ViewData["Title"] = "AddOnlineCourse";
    Layout = "~/Areas/Administration/Views/Shared/_Layout.cshtml";
}
<!doctype html>
<html lang="en">
<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">

    <!-- Js Stylesheet -->
    <script src="~/public/js/jquery.min.js"></script>
    <script src="~/js/jquery.validate.min.js"></script>
    <script src="~/js/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/js/tinymce.min.js"></script>

    <!--Toaster css Link-->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/1.3.1/css/toastr.css" />
    <!-- Js Stylesheet -->
    <script src="~/public/js/jquery.min.js"></script>
    <script src="~/js/jquery.validate.min.js"></script>
    <script src="~/js/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/js/tinymce.min.js"></script>
    <title>User Registration</title>
    <style>
        body {
            background-color: lightcyan;
        }

        .container {
            margin-top: 40px;
            background-color: white;
        }

        .form-row {
            margin-top: 20px;
        }

        .panel-primary > .panel-heading {
            color: #fff;
            background-color: #337AB7;
            border-color: #337AB7;
        }

        .panel-heading {
            padding: 10px 15px;
            border-bottom: 1px solid transparent;
            border-top-left-radius: 3px;
            border-top-right-radius: 3px;
        }

        button {
            margin: 20px;
        }

        .card {
            border: none;
        }
    </style>
</head>
<body>
    @if (TempData["response"] != null)
    {
        <script>
    $(document).ready(function () {
        var success = '@((TempData["response"] != null).ToString())';
        if (success == 'false' || success == false) {

        }
        else {
            toastr.info('@TempData["response"].ToString()')
        }
    });
        </script>
    }

    <div class="container">
        <h3 style="margin-left: 30px; margin-top: 10px;">Add Course Online</h3>
        @using (Html.BeginForm("AddOnlineCourse", "Courses", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="col-12 grid-margin">
                <div class="card">
                    <div class="card-body">
                        <div class="panel panel-primary ">
                            <div class="panel-heading" id="panelheading">Online Course</div>
                            <div class="panel-body">
                                <div class="form-row">
                                    <div class="form-group col-md-4">
                                        <label>Course Name:</label>
                                        @Html.TextBoxFor(x => x.Name, new { @class = "form-control", @placeholder = "Course Name*" })
                                        @Html.ValidationMessageFor(x => x.Name, "", new { @class = "text-danger" })

                                    </div>
                                    <div class="form-group col-md-4">
                                        <label>Course Code:</label>
                                        @Html.TextBoxFor(x => x.Code, new { @class = "form-control", @placeholder = "Course Code*" })
                                        @Html.ValidationMessageFor(x => x.Code, "", new { @class = "text-danger" })

                                    </div>
                                    <div class="form-group col-md-4">
                                        <label>Credit Hours:</label>
                                        @Html.TextBoxFor(x => x.CreditHours, new { @class = "form-control", @placeholder = "Credit Hours*" })
                                        @Html.ValidationMessageFor(x => x.CreditHours, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-md-4">
                                        <label asp-for="CoverPhoto1" class="control-label"></label>
                                        <div class="custom-file">
                                            <label for="CoverPhoto1">Upload Course Image</label>
                                            <input type="file" name="CoverPhoto1" id="file" onchange="return fileValidation()" />
                                        </div>
                                    </div>
                                </div>
                                <div class="form-row">
                                    <div class="form-group col-md-12">
                                        <label>Description:</label>
                                        @Html.TextAreaFor(x => x.Description, new { @class = "form-control", @placeholder = "Description", id = "richtxt" })
                                        @Html.ValidationMessageFor(x => x.Description, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-12 grid-margin">
                <div class="card">
                    <div class="card-body">
                        <div class="panel panel-primary ">
                            <div class="panel-heading" id="panelheading">Fee Details</div>
                            <div class="panel-body">
                                <div class="form-row">
                                    <div class="form-group col-md-4">
                                        <label>Total Fee:</label>
                                        @Html.TextBoxFor(x => x.CourseFee.FeeAmount, new { @class = "form-control", @placeholder = "Total Fee*", @id = "courseFee", @onkeypress = "return event.charCode >= 48 && event.charCode <= 57" })
                                        @Html.ValidationMessageFor(x => x.CourseFee.FeeAmount, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-md-4">
                                        <label>Fee Per Credit:</label>
                                        <p id="feepercredit"></p>
                                    </div>
                                    <div class="form-group col-md-4">
                                        <label>Due Date:</label>
                                        @Html.TextBoxFor(x => x.CourseFee.DueDate, new { @class = "form-control", @placeholder = "", @Type = "date" })
                                        @Html.ValidationMessageFor(x => x.CourseFee.DueDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <!--Fee Installment-->
                                <div class="form-row">
                                    <div class="form-group col-md-4">

                                        <div class="form-check" style="position:absolute;margin-left:10px;">
                                            @Html.CheckBox("CourseFee.IsInstallementAllow", new { @class = "form-check-input", @id = "Installment", @style = "width:15px" })
                                            <label class="form-check-label" style="margin-left:10px"> Make Installments  </label>
                                        </div>
                                    </div>
                                    <div class="form-group col-md-4">
                                        <div id="InstallmentPlan" style="display: none;">
                                            @Html.DropDownList("UserTitle", new List<SelectListItem>{new SelectListItem{ Text="2 Months", Value="2"},
                                                new SelectListItem{ Text="3 Months", Value="3"}, new SelectListItem{ Text="4 Months", Value="4"},
                                           new SelectListItem{ Text="5 Months", Value="5"}, new SelectListItem{ Text="6 Months", Value="6"},
                                           new SelectListItem{ Text="7 Months", Value="7"}, new SelectListItem{ Text="12 Months", Value="12"}
                                               }, "--- Select Months---", new { @class = "form-control", id = "checkit" })
                                        </div>
                                    </div>
                                    <div class="form-group col-md-4">
                                        <div id="Monthly" style="display: none;">
                                            <label>Fee Per Month:</label>
                                            <h6 id="CalculatedAmount"></h6>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-12 grid-margin">
                <div class="card">
                    <div class="card-body">
                        <div class="panel panel-primary ">
                            <div class="panel-heading" id="panelheading">Course Quota</div>
                            <div class="panel-body">
                                <div class="form-row">
                                    <div class="form-group col-md-4">
                                        <label>Seats Available:</label>
                                        @Html.TextBoxFor(x => x.CourseQuota.NoofStudents, new { @class = "form-control", @placeholder = "Total Seats" })
                                        @Html.ValidationMessageFor(x => x.CourseQuota.NoofStudents, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-md-4">
                                        <label>Batch Name:</label>
                                        @Html.DropDownListFor(model => model.CourseQuota.BatchId, (IEnumerable<SelectListItem>)ViewBag.Batch, "--Choose Batch--", new { @class = "form-control dropdowncursor", id = "txtzipcode" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-button" style="padding-left: 25px; float: right;">
                <button type="submit" class="btn btn-success">Submit</button>
                <button type="reset" class="btn btn-primary">Reset</button>
            </div>
        }
    </div>
    <!-- Optional JavaScript -->
    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script type="text/javascript">

        function fileValidation() {
            var fileInput =
                document.getElementById('file');
            var filePath = fileInput.value;
            // Allowing file type
            var allowedExtensions = /(\.jpg|\.jpeg|\.png)$/i;

            if (!allowedExtensions.exec(filePath)) {
                alert('Only jPG and Png file Allowed');
                fileInput.value = '';
                return false;
            }
            else {

                // Image preview
                if (fileInput.files && fileInput.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        document.getElementById(
                            'imagePreview').innerHTML =
                            '<img src="' + e.target.result
                            + '"/>';
                    };

                    reader.readAsDataURL(fileInput.files[0]);
                }
            }
        }
        $(document).ready(function () {
            $("#Installment").change(function () {
                if (this.checked) {
                    $("#InstallmentPlan").show();
                }
                else {
                    $("#InstallmentPlan").hide();
                    $("#Monthly").hide();
                }

            })
            $("#InstallmentPlan").change(function () {
                var ddlval = $("#InstallmentPlan").val();
                if (ddlval != null) {
                    $("#Monthly").show();
                }

                $("#checkit").change(function () {
                    var fee = $("#courseFee").val();
                    var month = $("#checkit").val();
                    if (month == 2) {
                        $("#CalculatedAmount").html(fee / month);
                    }
                    if (month == 3) {
                        $("#CalculatedAmount").html(fee / month);
                    }
                    if (month == 4) {
                        $("#CalculatedAmount").html(fee / month);
                    }
                    if (month == 5) {
                        $("#CalculatedAmount").html(fee / month);
                    }
                    if (month == 6) {
                        $("#CalculatedAmount").html(fee / month);
                    }
                    if (month == 7) {
                        $("#CalculatedAmount").html(fee / month);
                    }
                    if (month == 12) {
                        $("#CalculatedAmount").html(fee / month);
                    }
                });


            })

        });
    </script>

    <script>
        $('#courseFee').keyup(function (e) {
            var ali = this.value;
            var credithours = $("#CreditHours").val();
            var res = parseInt(this.value) / parseInt(credithours);
            $("#feepercredit").html(res);
            $("#feepercredit").text(res);
            //alert($("#feepercredit").html());
        })
    </script>
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>

    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }
    <script>
        //tinymce.EditorManager.execCommand('mceRemoveEditor', true, "editTextArea");
        tinymce.init({
            selector: 'textarea#richtxt',
            toolbar: 'bold italic underline | undo redo | styleselect | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link',
            menubar: 'edit format',
            force_br_newlines: true,
            force_p_newlines: false,
            forced_root_block: '',
            height: 400,
            menu: {
            },
            plugins: 'paste tinycomments pagebreak',
            tinycomments_mode: 'embedded',
            tinycomments_author: 'Author',
            content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }',
            table_default_attributes: {
                border: '0'
            }
        });
        $(".tox-tinymce").css("width", "100%");
        $(".tox-tinymce").css("height", "370px");
    </script>
</body>
</html>